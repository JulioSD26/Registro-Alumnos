/*
Este programa registra alumnos en una base de datos llamada bs_ins en mysql
puedes ingresar el nombre del alumno y su grupo, en la base de datos se guarda
el ID de cada registro y es auto incrementable.
Con el ID puedes modificar o eliminar un alumno.
También puedes generar un archivo pdf con los registros de la base de datos.
 */
package ventanas;
// importamos la libreria de SQL
import java.sql.*;
import javax.swing.JOptionPane;

// importamos la libreria de itext para generar el PDF
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.HeadlessException;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;

// para usar imagenes y editar la fuente en nuestro documento pdf
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Font;


import java.io.IOException;


/**
 *
 * @author Julio
 */
public class RegistroAlumnos extends javax.swing.JFrame {

    /**
     * Creates new form RegistroAlumnos
     */
    public RegistroAlumnos() {
        initComponents();
        setLocationRelativeTo(null); // pone en centro la ventana
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelNombre = new javax.swing.JLabel();
        jTextFieldNombre = new javax.swing.JTextField();
        jButtonRegistrar = new javax.swing.JButton();
        jButtonModificar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jLabelGrupo = new javax.swing.JLabel();
        jTextFieldGrupo = new javax.swing.JTextField();
        jLabelCodigo = new javax.swing.JLabel();
        jTextFieldBuscar = new javax.swing.JTextField();
        jButtonBuscar = new javax.swing.JButton();
        jLabelStatus = new javax.swing.JLabel();
        jButtonCrearRegistro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelNombre.setText("Nombre: ");

        jButtonRegistrar.setText("Registrar");
        jButtonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrarActionPerformed(evt);
            }
        });

        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jLabelGrupo.setText("Grupo:");

        jLabelCodigo.setText("Ingresa el código del alumno:");

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jLabelStatus.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jButtonCrearRegistro.setText("Generar PDF");
        jButtonCrearRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCrearRegistroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelStatus)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonCrearRegistro)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelNombre)
                            .addComponent(jLabelGrupo)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextFieldGrupo, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextFieldNombre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonRegistrar)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonModificar)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonEliminar))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelCodigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                            .addComponent(jTextFieldBuscar))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCodigo)
                    .addComponent(jTextFieldBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonBuscar)
                .addGap(14, 14, 14)
                .addComponent(jLabelNombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelGrupo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRegistrar)
                    .addComponent(jButtonModificar)
                    .addComponent(jButtonEliminar))
                .addGap(38, 38, 38)
                .addComponent(jLabelStatus)
                .addGap(18, 18, 18)
                .addComponent(jButtonCrearRegistro)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrarActionPerformed
        // Crear la conexión a la base de datos
        try{ 
            // ruta , usuario, contraseña
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/bd_ins?useSSL=false","root","");
             // instrucciones para sql
            PreparedStatement pst = cn.prepareStatement("INSERT INTO alumnos values(?, ?, ?)");
            
            // el primero es para el ID y sql hará automaticamente el auto_increment
            pst.setString(1, "0");
            // el segundo campo es para el nombre, el metodo trim quita espacios al inicio y final
            pst.setString(2, jTextFieldNombre.getText().trim());
            // el tercer campo es para el grupo
            pst.setString(3, jTextFieldGrupo.getText().trim());
            
            // ejecuta las instrucciones sql
            pst.executeUpdate();
            
            // reiniciar los campos de texto
            jLabelNombre.setText(null);
            jLabelGrupo.setText(null);
            
            // mostrar en el jlabel un mensaje
            jLabelStatus.setText("Registro exitoso");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error en la conexion\n" + e);
        }
        
    }//GEN-LAST:event_jButtonRegistrarActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        // TODO add your handling code here:
        try{
            // ruta , usuario, contraseña
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/bd_ins?useSSL=false","root","");
            // instrucciones para sql
            PreparedStatement pst = cn.prepareStatement("SELECT * FROM alumnos where ID = ?");
            pst.setString(1, jTextFieldBuscar.getText().trim());
            
            ResultSet rs = pst.executeQuery();
            
            if (rs.next()) {
                jTextFieldNombre.setText(rs.getString("NombreAlumno"));
                jTextFieldGrupo.setText(rs.getString("Grupo"));
            }else{
                JOptionPane.showMessageDialog(null, "Alumno no registrado.");
            }
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error en la conexion\n" + e);
        }
        
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        // TODO add your handling code here:
        try{
            // Guardamos el ID que el usuario desee modificar su nombre y/o grupo
            String ID = jTextFieldBuscar.getText().trim();
            
            // ruta , usuario, contraseña
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/bd_ins?useSSL=false", "root", "");
            PreparedStatement pst = cn.prepareStatement("UPDATE alumnos SET nombreAlumno = ?, Grupo = ? WHERE ID = " + ID);
            
            pst.setString(1, jTextFieldNombre.getText().trim());
            pst.setString(2, jTextFieldGrupo.getText().trim());
            
            pst.executeUpdate();
            
            jLabelStatus.setText("Modificación exitosa");
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error en la conexion\n" + e);
        }
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
        try{
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/bd_ins?useSSL=false", "root", "");
            PreparedStatement pst = cn.prepareStatement("DELETE FROM alumnos WHERE ID = ?");
            
            pst.setString(1, jTextFieldBuscar.getText().trim());
            pst.executeUpdate();
            
            jTextFieldNombre.setText(null);
            jTextFieldGrupo.setText(null);
            jTextFieldBuscar.setText(null);
            
            jLabelStatus.setText("Registro eliminado");
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error en la conexion\n" + e);
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonCrearRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCrearRegistroActionPerformed
        // BORRAR
        System.out.println("Se aplasto el botón pdf");
        // Crear un objeto de la clase Document
        
        Document documento = new Document();
        
        try{
            // guardamos en una variable la ruta donde queremos guardar el archivo PDF
            // el user.home devuelve en mi caso C:\Users\Julio
            String ruta = System.getProperty("user.home");
            // BORRAR
            System.out.println("la ruta es: " + ruta);
            // donde lo va a guardar y su nombre la extension pdf
            PdfWriter.getInstance(documento, new FileOutputStream(ruta + "/Desktop/Reporte_Alumnos.pdf"));
            
            // Insertar la imagen
            Image header = Image.getInstance("src/img/header.png");
            header.scaleToFit(650, 1000);
            header.setAlignment(Chunk.ALIGN_CENTER);
            
            // darle formato al texto
            Paragraph parrafo = new Paragraph();
            parrafo.setAlignment(Paragraph.ALIGN_CENTER);
            // alt+0169
            parrafo.add("Formato creado por Julio Sanchez ©\n\n");
            parrafo.setFont(FontFactory.getFont("Tahoma", 18, Font.BOLD, BaseColor.DARK_GRAY));
            // titulo
            parrafo.add("Alumnos registrados \n\n");
            
            // Para agregar la imagen y el parrafo debemos de escribir
            // el código después de abrir el documento

            // abrir el documento
            documento.open();
            // BORRAR
            System.out.println("documento abierto");
            //insertar la imagen y el parrafo
            documento.add(header);
            documento.add(parrafo);
            
            
            // insertar una tabla en el documento
            // creamos el objeto y le pasamos el numero de columnas
            PdfPTable tabla = new PdfPTable(3);
            // asignarle los titulos de las columnas
            tabla.addCell("Código");
            tabla.addCell("Nombre del alumno");
            tabla.addCell("Grupo");
            
            // crear la conexion a la base de datos
            try{
                Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/bd_ins?useSSL=false", "root", "");
                // Seleccionar todo de la tabla alumnos
                PreparedStatement pst = cn.prepareStatement("SELECT * FROM alumnos");
                
                // ejecutamos las dos lineas anteriores
                ResultSet rs = pst.executeQuery();
                
                // validar que se encontraron los datos
                if (rs.next()) {
                    //cada vez que encuentre un resistro seguira ejecutandose el while
                     do {
                         // columna del ID
                        tabla.addCell(rs.getString(1));
                         // columna del nombre
                        tabla.addCell(rs.getString(2));
                         // columna del grupo
                        tabla.addCell(rs.getString(3));
                        // BORRAR
                         System.out.println("Los datos son: " + rs.getString(2));
                        
                    } while (rs.next());
                     documento.add(tabla);
                    
                } 
                // le agregamos los errores que le corresponden
            }catch(DocumentException | SQLException e){
                JOptionPane.showMessageDialog(null, "Error en la conexion \n"+e);
                // BORRAR
                System.out.println("error en la conexión...");
            }
            // cerrar el documento
            documento.close();
            // BORRAR
            System.out.println("se cerro el documento");
            // mostrar mensaje de reporte creado
            JOptionPane.showMessageDialog(null, "Reporte creado.");
            
        }catch(DocumentException | HeadlessException | FileNotFoundException e){
            
        }catch(IOException e){
            System.out.println("Error en la imagen:\n" + e);
        }
        
        
    }//GEN-LAST:event_jButtonCrearRegistroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroAlumnos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonCrearRegistro;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonRegistrar;
    private javax.swing.JLabel jLabelCodigo;
    private javax.swing.JLabel jLabelGrupo;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JTextField jTextFieldBuscar;
    private javax.swing.JTextField jTextFieldGrupo;
    private javax.swing.JTextField jTextFieldNombre;
    // End of variables declaration//GEN-END:variables
}
